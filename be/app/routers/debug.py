from fastapi import APIRouter, Depends\nfrom sqlalchemy.orm import Session\nfrom typing import Dict, Any\n\nfrom ..database.db import get_db\nfrom ..models.models import User, Thread\nfrom ..services import auth_service\n\nrouter = APIRouter(tags=['debug'])\n\n@router.get('/debug/users')\ndef list_users(current_user: Dict[str, Any] = Depends(auth_service.get_current_user), db: Session = Depends(get_db)):\n    if current_user['role'] not in ['manager', 'leadership']:\n        return {'message': 'Access denied'}\n    \n    users = db.query(User).all()\n    return {'users': [{'id': user.id, 'username': user.username, 'role': user.role, 'department': user.department} for user in users]}\n\n@router.get('/debug/threads')\ndef list_all_threads(current_user: Dict[str, Any] = Depends(auth_service.get_current_user), db: Session = Depends(get_db)):\n    if current_user['role'] not in ['manager', 'leadership']:\n        return {'message': 'Access denied'}\n    \n    threads = db.query(Thread).all()\n    return {'threads': [{'id': thread.id, 'title': thread.title, 'assigned_to': thread.assigned_to, 'status': thread.status} for thread in threads]}
